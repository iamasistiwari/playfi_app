# Generated by Django 5.2.4 on 2025-08-11 22:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Songs",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("type", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=255)),
                ("published_time", models.CharField(max_length=100)),
                ("duration", models.CharField(max_length=50)),
                ("view_count", models.JSONField()),
                ("link", models.URLField()),
                ("thumbnails", models.JSONField()),
                ("rich_thumbnail", models.JSONField(blank=True, null=True)),
                ("channel", models.JSONField()),
                ("accessibility", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=128)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playlists",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("playlistName", models.CharField(max_length=255)),
                ("isGlobal", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "admin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_playlists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "joined_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="joined_playlists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "songs",
                    models.ManyToManyField(
                        blank=True, related_name="playlists", to="api.songs"
                    ),
                ),
            ],
        ),
    ]
